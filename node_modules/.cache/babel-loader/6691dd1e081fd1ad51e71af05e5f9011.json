{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ajhuf\\\\Desktop\\\\portfolio\\\\src\\\\components\\\\Slide\\\\index.js\";\nimport React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-use-gesture\";\nimport './style.css';\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  top: 100%;\n  margin-left: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n_c = SlideContainer;\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 100%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: ##0000001e;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n  border-radius: 8px;\n  \n`;\n_c2 = SlideCard;\n\nfunction Slide({\n  content,\n  link,\n  name,\n  description,\n  offsetRadius,\n  index,\n  animationConfig,\n  moveSlide,\n  delta,\n  down,\n  up\n}) {\n  const offsetFromMiddle = index - offsetRadius;\n  const totalPresentables = 2 * offsetRadius + 1;\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n  const translateYoffset = 50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  let translateY = -50;\n\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Spring, {\n    to: {\n      transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n      top: `${offsetRadius === 0 ? 50 : 50 + offsetFromMiddle * 50 / offsetRadius}%`,\n      opacity: distanceFactor * distanceFactor\n    },\n    config: animationConfig,\n    children: style => /*#__PURE__*/_jsxDEV(SlideContainer, {\n      style: { ...style,\n        zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n      },\n      children: /*#__PURE__*/_jsxDEV(SlideCard, {\n        onClick: () => moveSlide(offsetFromMiddle),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: link,\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              id: \"proCard\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: content,\n            alt: name,\n            id: \"proImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          id: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"descriptionTitle\",\n            children: \" Project Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Slide;\nexport default withGesture()(Slide);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SlideContainer\");\n$RefreshReg$(_c2, \"SlideCard\");\n$RefreshReg$(_c3, \"Slide\");","map":{"version":3,"sources":["C:/Users/ajhuf/Desktop/portfolio/src/components/Slide/index.js"],"names":["React","styled","Spring","withGesture","SlideContainer","div","SlideCard","Slide","content","link","name","description","offsetRadius","index","animationConfig","moveSlide","delta","down","up","offsetFromMiddle","totalPresentables","distanceFactor","Math","abs","translateYoffset","translateY","transform","top","opacity","style","zIndex"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAQ,aAAR;AAGA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,c;AAWN,MAAME,SAAS,GAAGL,MAAM,CAACI,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAMC,S;;AAmBN,SAASC,KAAT,CAAe;AACbC,EAAAA,OADa;AAEbC,EAAAA,IAFa;AAGbC,EAAAA,IAHa;AAIbC,EAAAA,WAJa;AAKbC,EAAAA,YALa;AAMbC,EAAAA,KANa;AAObC,EAAAA,eAPa;AAQbC,EAAAA,SARa;AASbC,EAAAA,KATa;AAUbC,EAAAA,IAVa;AAWbC,EAAAA;AAXa,CAAf,EAYG;AACD,QAAMC,gBAAgB,GAAGN,KAAK,GAAGD,YAAjC;AACA,QAAMQ,iBAAiB,GAAG,IAAIR,YAAJ,GAAmB,CAA7C;AACA,QAAMS,cAAc,GAAG,IAAIC,IAAI,CAACC,GAAL,CAASJ,gBAAgB,IAAIP,YAAY,GAAG,CAAnB,CAAzB,CAA3B;AAGA,QAAMY,gBAAgB,GACpB,MAAMF,IAAI,CAACC,GAAL,CAASJ,gBAAT,KAA8BP,YAAY,GAAG,CAA7C,CAAN,CADF;AAEA,MAAIa,UAAU,GAAG,CAAC,EAAlB;;AAEA,MAAIb,YAAY,KAAK,CAArB,EAAwB;AACtB,QAAIC,KAAK,KAAK,CAAd,EAAiB;AACfY,MAAAA,UAAU,GAAG,CAAb;AACD,KAFD,MAEO,IAAIZ,KAAK,KAAKO,iBAAiB,GAAG,CAAlC,EAAqC;AAC1CK,MAAAA,UAAU,GAAG,CAAC,GAAd;AACD;AACF;;AAED,MAAIN,gBAAgB,KAAK,CAArB,IAA0BF,IAA9B,EAAoC;AAClCQ,IAAAA,UAAU,IAAIT,KAAK,CAAC,CAAD,CAAL,IAAYJ,YAAY,GAAG,CAA3B,CAAd;;AACA,QAAIa,UAAU,GAAG,CAAC,EAAlB,EAAsB;AACpBV,MAAAA,SAAS,CAAC,CAAC,CAAF,CAAT;AACD;;AACD,QAAIU,UAAU,GAAG,CAAC,GAAlB,EAAuB;AACrBV,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD;AACF;;AACD,MAAII,gBAAgB,GAAG,CAAvB,EAA0B;AACxBM,IAAAA,UAAU,IAAID,gBAAd;AACD,GAFD,MAEO,IAAIL,gBAAgB,GAAG,CAAvB,EAA0B;AAC/BM,IAAAA,UAAU,IAAID,gBAAd;AACD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,EAAE,EAAE;AACFE,MAAAA,SAAS,EAAG,6BAA4BD,UAAW,YAAWJ,cAAe,GAD3E;AAEFM,MAAAA,GAAG,EAAG,GACJf,YAAY,KAAK,CAAjB,GAAqB,EAArB,GAA0B,KAAMO,gBAAgB,GAAG,EAApB,GAA0BP,YAC1D,GAJC;AAKFgB,MAAAA,OAAO,EAAEP,cAAc,GAAGA;AALxB,KADN;AAQE,IAAA,MAAM,EAAEP,eARV;AAAA,cAUGe,KAAK,iBACJ,QAAC,cAAD;AACE,MAAA,KAAK,EAAE,EACL,GAAGA,KADE;AAELC,QAAAA,MAAM,EAAER,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASJ,gBAAT,IAA6B,CAAtC;AAFH,OADT;AAAA,6BAME,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,MAAMJ,SAAS,CAACI,gBAAD,CAAnC;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACA;AAAG,YAAA,IAAI,EAAEV,IAAT;AAAA,mCAAe;AAAI,cAAA,EAAE,EAAC,SAAP;AAAA,wBAAkBC;AAAlB;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAK,YAAA,GAAG,EAAEF,OAAV;AAAmB,YAAA,GAAG,EAAEE,IAAxB;AAA8B,YAAA,EAAE,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,2BAMA;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,EAAE,EAAC,aAA9B;AAAA,kCACA;AAAI,YAAA,EAAE,EAAC,kBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;MA9EQJ,K;AAgFT,eAAeJ,WAAW,GAAGI,KAAH,CAA1B","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { withGesture } from \"react-use-gesture\";\nimport  './style.css';\n\n\nconst SlideContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  top: 100%;\n  margin-left: 20%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n`;\n\nconst SlideCard = styled.div`\n  position: relative;\n  max-width: 100%;\n  min-width: 30%;\n  width: 100vw;\n  height: 100%;\n  background: ##0000001e;\n  font-size: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transform-origin: 50% 50%;\n  border-radius: 8px;\n  \n`;\n\n\n\n\nfunction Slide({\n  content,\n  link,\n  name,\n  description,\n  offsetRadius,\n  index,\n  animationConfig,\n  moveSlide,\n  delta,\n  down,\n  up\n}) {\n  const offsetFromMiddle = index - offsetRadius;\n  const totalPresentables = 2 * offsetRadius + 1;\n  const distanceFactor = 1 - Math.abs(offsetFromMiddle / (offsetRadius + 1));\n\n\n  const translateYoffset =\n    50 * (Math.abs(offsetFromMiddle) / (offsetRadius + 1));\n  let translateY = -50;\n\n  if (offsetRadius !== 0) {\n    if (index === 0) {\n      translateY = 0;\n    } else if (index === totalPresentables - 1) {\n      translateY = -100;\n    }\n  }\n\n  if (offsetFromMiddle === 0 && down) {\n    translateY += delta[1] / (offsetRadius + 1);\n    if (translateY > -40) {\n      moveSlide(-1);\n    }\n    if (translateY < -100) {\n      moveSlide(1);\n    }\n  }\n  if (offsetFromMiddle > 0) {\n    translateY += translateYoffset;\n  } else if (offsetFromMiddle < 0) {\n    translateY -= translateYoffset;\n  }\n\n  return (\n    <Spring\n      to={{\n        transform: `translateX(0%) translateY(${translateY}%) scale(${distanceFactor})`,\n        top: `${\n          offsetRadius === 0 ? 50 : 50 + (offsetFromMiddle * 50) / offsetRadius\n        }%`,\n        opacity: distanceFactor * distanceFactor\n      }}\n      config={animationConfig}\n    >\n      {style => (\n        <SlideContainer\n          style={{\n            ...style,\n            zIndex: Math.abs(Math.abs(offsetFromMiddle) - 2)\n          }}\n        >\n          <SlideCard onClick={() => moveSlide(offsetFromMiddle)}>\n          <div className=\"container\" >\n          <a href={link}><h4 id=\"proCard\">{name}</h4></a>\n          <img src={content} alt={name} id=\"proImg\"/>  \n          </div>\n          &nbsp;&nbsp;\n          <div className=\"container\" id=\"description\">\n          <h3 id=\"descriptionTitle\"> Project Description</h3>\n          <p>{description}</p>\n          </div>\n          </SlideCard>\n        </SlideContainer>\n      )}\n    </Spring>\n  );\n}\n\nexport default withGesture()(Slide);\n"]},"metadata":{},"sourceType":"module"}